services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password1
      POSTGRES_DB: printer_queue
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password1@db:5432/printer_queue
      SECRET_KEY: a1b2c3d4e5f67890123456789abcdef0123456789abcdef0123456789abcdef
      REDIS_URL: redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app:/app

  frontend:
    build:
      context: .
      dockerfile: /my/Dockerfile-frontend
    ports:
      - "3003:3003"
    networks:
      - app-network
    volumes:
      - ./my:/my # Убедимся, что путь совпадает с WORKDIR
      - frontend_node_modules:/my/node_modules
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge
